- hosts: localhost
  become: true
  gather_facts: true
  vars:
    dotfiles: https://github.com/marcobompani/dotfiles
    home_dir: /home/marco
    home_user: marco

  tasks:
    - name: Install core pacman packages
      pacman:
        name:
          - base-devel
          - tmux
          - htop
          - tcpdump
          - git
          - python-pip
          - python-pexpect
          - trash-cli
          - xsel
          - net-tools
          - netctl
          - nfs-utils
          - exa
          - wget
          - curl
          - dnsutils
          - findutils
          - unzip
          - openssl
          - mlocate
          - speedtest-cli
          - neovim
          - man-db
          - man-pages
          - mingw-w64-gcc
          - mingw-w64-binutils
          - pyenv
          - python-pipenv
          - cron
          - nvidia
          - xorg-server
          - xorg-xinit
          - ranger
          - ttf-hack
          - keybase
          - wireshark-cli
        state: present
        update_cache: true
      tags: install, packages, pacman

    - name: Install Virtualbox guest utils
      pacman:
        name: virtualbox-guest-utils
        state: present
        update_cache: true
      when: ansible_facts['bios_version'] == "VirtualBox"
      tags: install, packages, pacman, virtualbox

    - name: Install utilities
      pacman:
        name:
          - rofi
          - alacritty
          - i3-gaps
          - i3lock
          - keepass
          - dunst
          - alsa-utils
          - feh
          - vlc
          - flameshot
          - wireshark-qt
          - lightdm
          - lightdm-gtk-greeter
        state: present
        update_cache: true
      tags: install, packages, pacman

    - name: Clone yay
      git:
        repo: https://aur.archlinux.org/yay.git
        dest: /opt/yay
      tags: yay, git

    - name: Prep yay
      command: chown -R {{ home_user }}:{{ home_user }} /opt/yay
      tags: yay

    - name: Install yay
      command: makepkg --noconfirm -si
      become: false
      args:
        chdir: /opt/yay
      tags: yay

    - name: Run yay
      expect:
        command: yay
        timeout: 300
        responses:
          Y/n: Y
      become: true
      tags: yay

    - name: Install AUR packages
      command: yay --noconfirm --needed -S {{ item }}
      with_items: 
        - zoom
        - slack-desktop
        - google-chrome
        - polybar
        - siji-git
        - ttf-unifont
        - picom
        - gnome-shell-extension-topicons-plus
      become_user: "{{ home_user }}"
      tags: aur, install, packages

    - name: Clone dotfiles
      git:
        repo: "{{ dotfiles }}"
        dest: "{{ home_dir }}/dotfiles"
      become_user: "{{ home_user }}"
      tags: git, dotfiles

    - name: Make directories
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ home_user }}"
        group: "{{ home_user }}"
        mode: "0755"
      with_items:
        - { path: "{{ home_dir }}/.config" }
        - { path: "{{ home_dir }}/.config/polybar" }
        - { path: "{{ home_dir }}/.config/nvim" }
        - { path: "{{ home_dir }}/.config/alacritty" }
        - { path: "{{ home_dir }}/.config/rofi" }
        - { path: "{{ home_dir }}/.config/dunst" }
        - { path: "{{ home_dir }}/.config/i3" }
        - { path: "{{ home_dir }}/.config/picom" }
        - { path: "{{ home_dir }}/.config/flameshot" }
        - { path: "{{ home_dir }}/.local/share/nvim/backup" }
      tags: dotfiles, folders

    - name: Link dotfiles
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ home_user }}"
        group: "{{ home_user }}"
        mode: "0644"
        state: link
      with_items:
        - { src: "{{ home_dir }}/dotfiles/tmux/tmux.conf", dest: "{{ home_dir }}/.tmux.conf" }
        - { src: "{{ home_dir }}/dotfiles/nvim/init.vim", dest: "{{ home_dir }}/.config/nvim/init.vim" }
        - { src: "{{ home_dir }}/dotfiles/i3/config", dest: "{{ home_dir }}/.config/i3/config" }
        - { src: "{{ home_dir }}/dotfiles/aliases/bash_aliases", dest: "{{ home_dir }}/.bash_aliases" }
        - { src: "{{ home_dir }}/dotfiles/alacritty/alacritty.conf", dest: "{{ home_dir }}/.config/alacritty/alacritty.conf" }
        - { src: "{{ home_dir }}/dotfiles/polybar/config", dest: "{{ home_dir }}/.config/polybar/config" }
        - { src: "{{ home_dir }}/dotfiles/dunst/dunstrc", dest: "{{ home_dir }}/.config/dunst/dunstrc" }
        - { src: "{{ home_dir }}/dotfiles/rofi/dracula.rasi", dest: "{{ home_dir }}/.config/rofi/dracula.rasi" }
        - { src: "{{ home_dir }}/dotfiles/flameshot/flameshot.ini", dest: "{{ home_dir }}/.config/flameshot/flameshot.ini" }
        - { src: "{{ home_dir }}/dotfiles/arch.jpg", dest: "{{ home_dir }}/Pictures/arch.jpg" }
      tags: dotfiles, symlinks

    - name: Create xinitrc
      shell: echo "exec i3" > {{ home_dir }}/.xinitrc
      become_user: "{{ home_user }}"
      tags: xinitrc

    - name: Install pip packages
      pip:
        name:
          - youtube-dl
          - twitch-dl
      tags: install, packages, pip

    - name: Install Vim-Plug
      shell: sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

      become_user: "{{ home_user }}"
      when: plug_exists.stat.exists == false
      tags: vim, install

    - name: Install Vim Plugins
      command: nvim --headless -E -s -c "source {{ home_dir }}/.config/nvim.init.vim" -c PlugInstall -c qa
      become_user: "{{ home_user }}"
      tags: vim, install, plugins

    - name: Enable lightdm
      ansible.builtin.systemd:
        name: lightdm
        enabled: yes
        masked: no
      tags: lightdm, sysconfig, systemd

    - name: Set graphical.target for lightdm
      shell: systemctl set-default graphical.target
      tags: lightdm, sysconfig
